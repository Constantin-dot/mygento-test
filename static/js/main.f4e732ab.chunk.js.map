{"version":3,"sources":["commonInput/TextInput.module.scss","commonInput/TextInput.tsx","modals/success/SuccessModal.tsx","modals/privacyPolicy/PrivacyPolicyModal.tsx","utils/consts.ts","applicatForm/ApplicantForm.tsx","utils/validators.ts","applicatForm/ApplicantFormContainer.tsx","App.tsx","index.tsx","applicatForm/ApplicantForm.module.scss","modals/privacyPolicy/PrivacyPolicyModal.module.scss"],"names":["module","exports","TextInput","React","memo","label","errorCondition","errorText","rest","className","classes","input","input__label","input__elem","input__error","inputs__error_text","SuccessModal","name","show","onHide","Modal","size","centered","Body","Title","id","Button","onClick","style","width","PrivacyPolicyModal","onAgree","ppModal","active","ppModalContent","ppModalContentActive","ppModalContentHeader","ppModalHideButton","ppModalText","ppModalContentAgreeButton","ApplicantForm","successModalVisible","setSuccessModalVisible","privacyPolicyModalVisible","setPrivacyPolicyModalVisible","formik","useFormik","initialValues","firstName","lastName","email","cvFile","radio","githubLink","agreement","validate","values","errors","test","validateHandler","onSubmit","resetForm","isVisible","wrapper","handleSubmit","ownDataBlock","type","placeholder","touched","getFieldProps","cvFileName","cvFileNameButton","setFieldValue","cvFileLabel","cvFileInput","value","checked","onChange","handleChange","agreementText","policyText","agreementErrorText","submitButton","disabled","ApplicantFormContainer","useState","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f4e732ab.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"TextInput_input__2MLWE\",\"input__label\":\"TextInput_input__label__1C3rP\",\"input__elem\":\"TextInput_input__elem__2Z16I\",\"input__error\":\"TextInput_input__error__2p_aT\",\"inputs__error_text\":\"TextInput_inputs__error_text__31jY3\"};","import React, { InputHTMLAttributes } from \"react\";\r\nimport classes from \"./TextInput.module.scss\";\r\n\r\ninterface PropsType extends InputHTMLAttributes<HTMLInputElement> {\r\n    label?: string;\r\n    errorText?: string;\r\n    errorCondition?: boolean;\r\n}\r\n\r\nexport const TextInput = React.memo(\r\n    ({ label, errorCondition, errorText, ...rest }: PropsType) => {\r\n        return (\r\n            <div className={classes.input}>\r\n                <p className={classes.input__label}>{label}</p>\r\n                <input\r\n                    className={`${classes.input__elem} ${\r\n                        errorCondition ? classes.input__error : \"\"\r\n                    }`}\r\n                    {...rest}\r\n                />\r\n                {errorCondition ? (\r\n                    <div className={classes.inputs__error_text}>\r\n                        {errorText}\r\n                    </div>\r\n                ) : null}\r\n            </div>\r\n        );\r\n    }\r\n);\r\n","import React from \"react\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\n\r\ntype SuccessModalType = {\r\n    name: string;\r\n    show: boolean;\r\n    onHide: () => void;\r\n};\r\n\r\nexport const SuccessModal: React.FC<SuccessModalType> = ({\r\n    name,\r\n    show,\r\n    onHide,\r\n}) => {\r\n    return (\r\n        <Modal size=\"lg\" centered show={show} onHide={onHide}>\r\n            <Modal.Body className=\"d-flex flex-column justify-content-center align-items-center\">\r\n                <Modal.Title\r\n                    id=\"contained-modal-title-vcenter\"\r\n                    className=\"mb-3\"\r\n                >\r\n                    {`Спасибо ${name}!`}\r\n                </Modal.Title>\r\n                Мы скоро свяжемся с Вами\r\n                <Button\r\n                    onClick={onHide}\r\n                    style={{ width: \"80%\" }}\r\n                    className=\"mt-5\"\r\n                >\r\n                    Понятно\r\n                </Button>\r\n            </Modal.Body>\r\n        </Modal>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport classes from \"./PrivacyPolicyModal.module.scss\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { TEXT_OF_POLICY } from \"../../utils/consts\";\r\nimport { PrivacyPolicyModalType } from \"../../utils/types\";\r\n\r\nexport const PrivacyPolicyModal: React.FC<PrivacyPolicyModalType> = ({\r\n    show,\r\n    onHide,\r\n    onAgree,\r\n}) => {\r\n    return (\r\n        <div\r\n            className={\r\n                show ? `${classes.ppModal} ${classes.active}` : classes.ppModal\r\n            }\r\n        >\r\n            <div\r\n                className={\r\n                    show\r\n                        ? `${classes.ppModalContent} ${classes.ppModalContentActive}`\r\n                        : classes.ppModalContent\r\n                }\r\n            >\r\n                <div>\r\n                    <div className={classes.ppModalContentHeader}>\r\n                        Политика конфиденциальности\r\n                    </div>\r\n                    <button\r\n                        onClick={onHide}\r\n                        className={classes.ppModalHideButton}\r\n                    >\r\n                        &#215;\r\n                    </button>\r\n                </div>\r\n                <div className={classes.ppModalText}>{TEXT_OF_POLICY}</div>\r\n                <Button\r\n                    onClick={onAgree}\r\n                    className={`mt-5 ${classes.ppModalContentAgreeButton}`}\r\n                >\r\n                    Я согласен\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","export const TEXT_OF_POLICY = `Настоящая политика обработки персональных данных\r\n    составлена в соответствии с требованиями Федерального\r\n    закона от 27.07.2006. №152-ФЗ «О персональных данных» и\r\n    определяет порядок обработки персональных данных и меры\r\n    по обеспечению безопасности персональных данных,\r\n    предпринимаемые Михайловым Иваном Сергеевичем (далее –\r\n    Оператор).\r\n1.1.\r\n\r\n    Оператор ставит своей важнейшей целью и условием\r\n    осуществления своей деятельности соблюдение прав и\r\n    свобод человека и гражданина при обработке его\r\n    персональных данных, в том числе защиты прав на\r\n    неприкосновенность частной жизни, личную и семейную\r\n    тайну. 1.2. Настоящая политика Оператора в отношении\r\n    обработки персональных данных (далее – Политика)\r\n    применяется ко всей информации, которую Оператор может\r\n    получить о посетителях веб-сайта\r\n    httpsː//thismywebsite·com.\r\n\r\n2. Основные понятия, используемые в Политике 2.1.\r\nАвтоматизированная обработка персональных данных – обработка\r\nперсональных данных с помощью средств вычислительной\r\nтехники; 2.2. Блокирование персональных данных – временное\r\nпрекращение обработки персональных данных (за исключением\r\nслучаев, если обработка необходима для уточнения\r\nперсональных данных); 2.3. Веб-сайт – совокупность\r\nграфических и информационных материалов, а также программ\r\nдля ЭВМ и баз данных, обеспечивающих их доступность в сети\r\nинтернет по сетевому адресу httpsː//thismywebsite·com; 2.4.\r\nИнформационная система персональных данных — совокупность\r\nсодержащихся в базах данных персональных данных, и\r\nобеспечивающих их обработку информационных технологий и\r\nтехнических средств; 2.5. Обезличивание персональных данных\r\n— действия, в результате которых невозможно определить без\r\nиспользования дополнительной информации принадлежность\r\nперсональных данных конкретному Пользователю или иному\r\nсубъекту персональных данных; 2.6. Обработка персональных\r\nданных – любое действие (операция) или совокупность действий\r\n(операций), совершаемых с использованием средств\r\nавтоматизации или без использования таких средств с\r\nперсональными данными, включая сбор, запись, систематизацию,\r\nнакопление, хранение, уточнение (обновление, изменение),\r\nизвлечение, использование, передачу (распространение,\r\nпредоставление, доступ), обезличивание, блокирование,\r\nудаление, уничтожение персональных данных; 2.7. Оператор –\r\nгосударственный орган, муниципальный орган, юридическое или\r\nфизическое лицо, самостоятельно или совместно с другими\r\nлицами организующие и (или) осуществляющие обработку\r\nперсональных данных, а также определяющие цели обработки\r\nперсональных данных, состав персональных данных, подлежащих\r\nобработке, действия (операции), совершаемые с персональными\r\nданными; 2.8. Персональные данные – любая информация,\r\nотносящаяся прямо или косвенно к определенному или\r\nопределяемому Пользователю веб-сайта\r\nhttpsː//thismywebsite·com; 2.9. Пользователь – любой\r\nпосетитель веб-сайта httpsː//thismywebsite·com; 2.10.\r\nПредоставление персональных данных – действия, направленные\r\nна раскрытие персональных данных определенному лицу или\r\nопределенному кругу лиц; 2.11. Распространение персональных\r\nданных – любые действия, направленные на раскрытие\r\nперсональных данных неопределенному кругу лиц (передача\r\nперсональных данных) или на ознакомление с персональными\r\nданными неограниченного круга лиц, в том числе обнародование\r\nперсональных данных в средствах массовой информации,\r\nразмещение в информационно-телекоммуникационных сетях или\r\nпредоставление доступа к персональным данным каким-либо иным\r\nспособом; 2.12. Трансграничная передача персональных данных\r\n– передача персональных данных на территорию иностранного\r\nгосударства органу власти иностранного государства,\r\nиностранному физическому или иностранному юридическому лицу;\r\n2.13. Уничтожение персональных данных – любые действия, в\r\nрезультате которых персональные данные уничтожаются\r\nбезвозвратно с невозможностью дальнейшего восстановления\r\nсодержания персональных данных в информационной системе\r\nперсональных данных и (или) уничтожаются материальные\r\nносители персональных данных. 3. Оператор может обрабатывать\r\nследующие персональные данные Пользователя 3.1. Фамилия,\r\nимя, отчество; 3.2. Номер телефона; 3.3. Адрес электронной\r\nпочты; 3.4. Также на сайте происходит сбор и обработка\r\nобезличенных данных о посетителях (в т.ч. файлов «cookie») с\r\nпомощью сервисов интернет-статистики (Яндекс Метрика и Гугл\r\nАналитика и других). 3.5. Вышеперечисленные данные далее по\r\nтексту Политики объединены общим понятием Персональные\r\nданные. 4. Цели обработки персональных данных 4.1. Цель\r\nобработки персональных данных Пользователя — заключение,\r\nисполнение и прекращение гражданско-правовых договоров;\r\nпредоставление доступа Пользователю к сервисам, информации\r\nи/или материалам, содержащимся на веб-сайте\r\nhttpsː//thismywebsite·com; уточнение деталей заказа. 4.2.\r\nТакже Оператор имеет право направлять Пользователю\r\nуведомления о новых продуктах и услугах, специальных\r\nпредложениях и различных событиях. Пользователь всегда может\r\nотказаться от получения информационных сообщений, направив\r\nОператору письмо на адрес электронной почты\r\nprivacy@thismywebsite·com с пометкой «Отказ от уведомлений о\r\nновых продуктах и услугах и специальных предложениях». 4.3.\r\nОбезличенные данные Пользователей, собираемые с помощью\r\nсервисов интернет-статистики, служат для сбора информации о\r\nдействиях Пользователей на сайте, улучшения качества сайта и\r\nего содержания. 5. Правовые основания обработки персональных\r\nданных 5.1. Оператор обрабатывает персональные данные\r\nПользователя только в случае их заполнения и/или отправки\r\nПользователем самостоятельно через специальные формы,\r\nрасположенные на сайте httpsː//thismywebsite·com. Заполняя\r\nсоответствующие формы и/или отправляя свои персональные\r\nданные Оператору, Пользователь выражает свое согласие с\r\nданной Политикой. 5.2. Оператор обрабатывает обезличенные\r\nданные о Пользователе в случае, если это разрешено в\r\nнастройках браузера Пользователя (включено сохранение файлов\r\n«cookie» и использование технологии JavaScript). 6. Порядок\r\nсбора, хранения, передачи и других видов обработки\r\nперсональных данных Безопасность персональных данных,\r\nкоторые обрабатываются Оператором, обеспечивается путем\r\nреализации правовых, организационных и технических мер,\r\nнеобходимых для выполнения в полном объеме требований\r\nдействующего законодательства в области защиты персональных\r\nданных. 6.1. Оператор обеспечивает сохранность персональных\r\nданных и принимает все возможные меры, исключающие доступ к\r\nперсональным данным неуполномоченных лиц. 6.2. Персональные\r\nданные Пользователя никогда, ни при каких условиях не будут\r\nпереданы третьим лицам, за исключением случаев, связанных с\r\nисполнением действующего законодательства. 6.3. В случае\r\nвыявления неточностей в персональных данных, Пользователь\r\nможет актуализировать их самостоятельно, путем направления\r\nОператору уведомление на адрес электронной почты Оператора\r\nprivacy@thismywebsite·com с пометкой «Актуализация\r\nперсональных данных». 6.4. Срок обработки персональных\r\nданных является неограниченным. Пользователь может в любой\r\nмомент отозвать свое согласие на обработку персональных\r\nданных, направив Оператору уведомление посредством\r\nэлектронной почты на электронный адрес Оператора\r\nprivacy@thismywebsite·com с пометкой «Отзыв согласия на\r\nобработку персональных данных». 7. Трансграничная передача\r\nперсональных данных 7.1. Оператор до начала осуществления\r\nтрансграничной передачи персональных данных обязан убедиться\r\nв том, что иностранным государством, на территорию которого\r\nпредполагается осуществлять передачу персональных данных,\r\nобеспечивается надежная защита прав субъектов персональных\r\nданных. 7.2. Трансграничная передача персональных данных на\r\nтерритории иностранных государств, не отвечающих\r\nвышеуказанным требованиям, может осуществляться только в\r\nслучае наличия согласия в письменной форме субъекта\r\nперсональных данных на трансграничную передачу его\r\nперсональных данных и/или исполнения договора, стороной\r\nкоторого является субъект персональных данных. 8.\r\nЗаключительные положения 8.1. Пользователь может получить\r\nлюбые разъяснения по интересующим вопросам, касающимся\r\nобработки его персональных данных, обратившись к Оператору с\r\nпомощью электронной почты privacy@thismywebsite·com. 8.2. В\r\nданном документе будут отражены любые изменения политики\r\nобработки персональных данных Оператором. Политика действует\r\nбессрочно до замены ее новой версией. 8.3. Актуальная версия\r\nПолитики в свободном доступе расположена в сети Интернет по\r\nадресу httpsː//thismywebsite·com/privac`;","import React from \"react\";\r\nimport classes from \"./ApplicantForm.module.scss\";\r\nimport { useFormik } from \"formik\";\r\nimport { TextInput } from \"../commonInput/TextInput\";\r\nimport { SuccessModal } from \"../modals/success/SuccessModal\";\r\nimport { PrivacyPolicyModal } from \"../modals/privacyPolicy/PrivacyPolicyModal\";\r\nimport { ApplicantFormPropsType, FormikErrorType } from \"../utils/types\";\r\nimport { validateHandler } from \"../utils/validators\";\r\n\r\nexport const ApplicantForm: React.FC<ApplicantFormPropsType> = React.memo(\r\n    ({\r\n        successModalVisible,\r\n        setSuccessModalVisible,\r\n        privacyPolicyModalVisible,\r\n        setPrivacyPolicyModalVisible,\r\n    }) => {\r\n        const formik = useFormik({\r\n            initialValues: {\r\n                firstName: \"\",\r\n                lastName: \"\",\r\n                email: \"\",\r\n                cvFile: \"\",\r\n                radio: \"\",\r\n                githubLink: \"\",\r\n                agreement: false,\r\n            },\r\n            validate: (values) => {\r\n                let errors: FormikErrorType = validateHandler(values);\r\n                return errors;\r\n            },\r\n            onSubmit: (values, { resetForm }) => {\r\n                setSuccessModalVisible({\r\n                    isVisible: true,\r\n                    name: formik.values.firstName,\r\n                });\r\n                resetForm();\r\n            },\r\n        });\r\n\r\n        // const cvNameHandler = () => {\r\n        //     let cvFileName = formik.values.cvFile;\r\n        //     // eslint-disable-next-line\r\n        //     let strickedSvFileName = cvFileName.split(/[\\\\\\/]/)[2];\r\n        //     formik.setFieldValue(\"cvFile\", strickedSvFileName);\r\n        //     console.log(strickedSvFileName);\r\n        // };\r\n\r\n        const cvRemoveHandler = () => {\r\n            formik.setFieldValue(\"cvFile\", \"\");\r\n        };\r\n\r\n        const agreeButtonHandler = () => {\r\n            formik.setFieldValue(\"agreement\", true);\r\n            setPrivacyPolicyModalVisible(false);\r\n        };\r\n\r\n        return (\r\n            <div className={classes.wrapper}>\r\n                <h1 className=\"mt-3\">Анкета соискателя</h1>\r\n\r\n                <form onSubmit={formik.handleSubmit}>\r\n                    <h3 className=\"mt-4\">Личные данные</h3>\r\n                    <div className={classes.ownDataBlock}>\r\n                        <TextInput\r\n                            label={\"Имя *\"}\r\n                            type={\"text\"}\r\n                            placeholder={\"Имя\"}\r\n                            errorText={formik.errors.firstName}\r\n                            errorCondition={\r\n                                !!formik.errors.firstName &&\r\n                                formik.touched.firstName\r\n                            }\r\n                            {...formik.getFieldProps(\"firstName\")}\r\n                        />\r\n\r\n                        <TextInput\r\n                            label={\"Фамилия *\"}\r\n                            type={\"text\"}\r\n                            placeholder={\"Фамилия\"}\r\n                            errorText={formik.errors.lastName}\r\n                            errorCondition={\r\n                                !!formik.errors.lastName &&\r\n                                formik.touched.lastName\r\n                            }\r\n                            {...formik.getFieldProps(\"lastName\")}\r\n                        />\r\n\r\n                        <TextInput\r\n                            label={\"Электронная почта *\"}\r\n                            type={\"email\"}\r\n                            placeholder={\"Электронная почта\"}\r\n                            errorText={formik.errors.email}\r\n                            errorCondition={\r\n                                !!formik.errors.email && formik.touched.email\r\n                            }\r\n                            {...formik.getFieldProps(\"email\")}\r\n                        />\r\n                        {!formik.values.cvFile ? (\r\n                            <label className={`mt-4 ${classes.cvFileLabel}`}>\r\n                                <input\r\n                                    type=\"file\"\r\n                                    className={classes.cvFileInput}\r\n                                    {...formik.getFieldProps(\"cvFile\")}\r\n                                />\r\n                                + Загрузить резюме\r\n                            </label>\r\n                        ) : (\r\n                            <div className={`mt-4 ${classes.cvFileName}`}>\r\n                                {formik.values.cvFile}\r\n                                <button\r\n                                    type=\"button\"\r\n                                    className={classes.cvFileNameButton}\r\n                                    onClick={cvRemoveHandler}\r\n                                >\r\n                                    &#215;\r\n                                </button>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n\r\n                    <div className={classes.radio}>\r\n                        <h3 className=\"mt-4\">Пол *</h3>\r\n                        {formik.errors.radio && formik.touched.radio && (\r\n                            <div className={classes.errorText}>\r\n                                {formik.errors.radio}\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                    <div>\r\n                        <label>\r\n                            <input\r\n                                type=\"radio\"\r\n                                value=\"male\"\r\n                                className=\"mr-2\"\r\n                                name=\"radio\"\r\n                                checked={formik.values.radio === \"male\"}\r\n                                onChange={formik.handleChange}\r\n                            />\r\n                            Мужской\r\n                        </label>\r\n                        <label>\r\n                            <input\r\n                                type=\"radio\"\r\n                                value=\"female\"\r\n                                className=\"ml-3 mr-2\"\r\n                                name=\"radio\"\r\n                                checked={formik.values.radio === \"female\"}\r\n                                onChange={formik.handleChange}\r\n                            />\r\n                            Женский\r\n                        </label>\r\n                    </div>\r\n\r\n                    <h3 className=\"mt-4\">Github</h3>\r\n                    <TextInput\r\n                        label={\"Вставьте ссылку на Github\"}\r\n                        type={\"text\"}\r\n                        placeholder={\"Вставьте ссылку на Github\"}\r\n                        errorText={formik.errors.githubLink}\r\n                        errorCondition={\r\n                            !!formik.errors.githubLink &&\r\n                            formik.touched.githubLink\r\n                        }\r\n                        {...formik.getFieldProps(\"githubLink\")}\r\n                    />\r\n\r\n                    <div className={classes.agreementText}>\r\n                        <label className=\"mt-4\">\r\n                            <input\r\n                                type=\"checkbox\"\r\n                                id=\"agreement\"\r\n                                checked={formik.values.agreement}\r\n                                {...formik.getFieldProps(\"agreement\")}\r\n                            />\r\n                            {` * Я\r\n                            согласен с `}\r\n                        </label>\r\n                        <div\r\n                            className={classes.policyText}\r\n                            onClick={() => setPrivacyPolicyModalVisible(true)}\r\n                        >\r\n                            полтикой конфиденциальности\r\n                        </div>\r\n                        <PrivacyPolicyModal\r\n                            show={privacyPolicyModalVisible}\r\n                            onHide={() => setPrivacyPolicyModalVisible(false)}\r\n                            value={formik.values.agreement}\r\n                            onAgree={agreeButtonHandler}\r\n                        />\r\n                        {formik.errors.agreement &&\r\n                            formik.touched.agreement && (\r\n                                <div className={classes.agreementErrorText}>\r\n                                    {formik.errors.agreement}\r\n                                </div>\r\n                            )}\r\n                    </div>\r\n\r\n                    <button\r\n                        type=\"submit\"\r\n                        className={`mt-4 ${classes.submitButton}`}\r\n                        disabled={\r\n                            !formik.values.agreement ||\r\n                            !formik.values.firstName ||\r\n                            !formik.values.lastName ||\r\n                            !formik.values.email ||\r\n                            !formik.values.radio\r\n                        }\r\n                    >\r\n                        Отправить\r\n                    </button>\r\n                    <SuccessModal\r\n                        name={successModalVisible.name}\r\n                        show={successModalVisible.isVisible}\r\n                        onHide={() =>\r\n                            setSuccessModalVisible({\r\n                                isVisible: false,\r\n                                name: \"\",\r\n                            })\r\n                        }\r\n                    />\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n);\r\n","import { FormikErrorType, FormikValidateValuesType } from \"./types\";\r\n\r\nexport const validateHandler = (values: FormikValidateValuesType) => {\r\n    const errors: FormikErrorType = {};\r\n    if (!values.firstName) {\r\n        errors.firstName = \"Пожалуйста, укажите Ваше имя\";\r\n    } else if (!/^[а-я]{2,15}$/i.test(values.firstName)) {\r\n        errors.firstName = \"В имени могут быть только буквы\";\r\n    }\r\n    if (!values.lastName) {\r\n        errors.lastName = \"Пожалуйста, укажите Вашу фамилию\";\r\n    } else if (!/^[а-я]{2,15}$/i.test(values.lastName)) {\r\n        errors.lastName = \"В фамилии могут быть только буквы\";\r\n    }\r\n    if (!values.email) {\r\n        errors.email = \"Пожалуйста, укажите Вашу электронную почту\";\r\n    } else if (\r\n        !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)\r\n    ) {\r\n        errors.email = \"Некорректный адрес электронной почты\";\r\n    }\r\n    if (!values.radio) {\r\n        errors.radio = \"Пожалуйста, укажите пол\";\r\n    }\r\n    if (!values.agreement) {\r\n        errors.agreement =\r\n            \"Пожалуйста, примите условия политики конфиденциальности\";\r\n    }\r\n    return errors;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { successModalVisibleType } from \"../utils/types\";\r\nimport { ApplicantForm } from \"./ApplicantForm\";\r\n\r\nexport const ApplicantFormContainer = () => {\r\n    const [successModalVisible, setSuccessModalVisible] =\r\n        useState<successModalVisibleType>({ isVisible: false, name: \"\" });\r\n    const [privacyPolicyModalVisible, setPrivacyPolicyModalVisible] =\r\n        useState<boolean>(false);\r\n\r\n    return (\r\n        <ApplicantForm\r\n            successModalVisible={successModalVisible}\r\n            setSuccessModalVisible={setSuccessModalVisible}\r\n            privacyPolicyModalVisible={privacyPolicyModalVisible}\r\n            setPrivacyPolicyModalVisible={setPrivacyPolicyModalVisible}\r\n        />\r\n    );\r\n};\r\n","import { ApplicantFormContainer } from \"./applicatForm/ApplicantFormContainer\";\n\nexport const App = () => {\n    return <ApplicantFormContainer />;\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport { App } from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ApplicantForm_wrapper__3kFAQ\",\"ownDataBlock\":\"ApplicantForm_ownDataBlock__3FJYq\",\"cvFileLabel\":\"ApplicantForm_cvFileLabel__3kHjR\",\"cvFileInput\":\"ApplicantForm_cvFileInput__JEV1e\",\"cvFileName\":\"ApplicantForm_cvFileName__2LAWr\",\"cvFileNameButton\":\"ApplicantForm_cvFileNameButton__1SJRY\",\"radio\":\"ApplicantForm_radio__3A3fm\",\"errorText\":\"ApplicantForm_errorText__3ECr9\",\"agreementText\":\"ApplicantForm_agreementText__3cuEM\",\"policyText\":\"ApplicantForm_policyText__30y6y\",\"agreementErrorText\":\"ApplicantForm_agreementErrorText__K5e-T\",\"submitButton\":\"ApplicantForm_submitButton__R3mk6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ppModal\":\"PrivacyPolicyModal_ppModal__25KWT\",\"ppModalContent\":\"PrivacyPolicyModal_ppModalContent__3S_lZ\",\"ppModalContentHeader\":\"PrivacyPolicyModal_ppModalContentHeader__3jgFg\",\"ppModalHideButton\":\"PrivacyPolicyModal_ppModalHideButton__1Dr-n\",\"ppModalText\":\"PrivacyPolicyModal_ppModalText__28eWN\",\"ppModalContentAgreeButton\":\"PrivacyPolicyModal_ppModalContentAgreeButton__3M4cE\",\"ppModalContentActive\":\"PrivacyPolicyModal_ppModalContentActive__12t-w\",\"active\":\"PrivacyPolicyModal_active__3kLSX\"};"],"sourceRoot":""}